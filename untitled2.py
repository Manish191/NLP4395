# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1myS5PVRg-a_gvVLumcBuOVoWIg-9l0d2
"""

from nltk import *
import nltk
from nltk import word_tokenize
nltk.download('punkt')
import random
import sys

import pickle

from nltk import word_tokenize
def preprocessing(x):
	words = ""
	f = open(x,'r',encoding="utf-8")#open and read file
	for line in f:
		words += (line.rstrip("\n"))
	f.close()
	xx = word_tokenize(words)
	bigrm = list(nltk.bigrams(xx))
	ungrm = list(xx)
	bigrmDict = {}
	ungrmDict = {}
	for t in bigrm:
		bigrmDict[t] = xx.count(t)
	for t in ungrm:
		ungrmDict[t] = xx.count(t)
	return(bigrmDict,ungrmDict)
EnglishB, EnglishU = preprocessing("/content/sample_data/LangId.train.English")
FrenchB, FrenchU = preprocessing("/content/sample_data/LangId.train.French")
ItalianB, ItalianU = preprocessing("/content/sample_data/LangId.train.Italian")
with open('EnglishB.pickle', 'wb') as handle:
	pickle.dump(EnglishB, handle, protocol=pickle.HIGHEST_PROTOCOL)
with open('EnglishU.pickle', 'wb') as handle:
	pickle.dump(EnglishU, handle, protocol=pickle.HIGHEST_PROTOCOL)
with open('FrenchB.pickle', 'wb') as handle:
	pickle.dump(FrenchB, handle, protocol=pickle.HIGHEST_PROTOCOL)
with open('FrenchU.pickle', 'wb') as handle:
	pickle.dump(FrenchU, handle, protocol=pickle.HIGHEST_PROTOCOL)
with open('ItalianB.pickle', 'wb') as handle:
	pickle.dump(ItalianB, handle, protocol=pickle.HIGHEST_PROTOCOL)
with open('ItalianU.pickle', 'wb') as handle:
	pickle.dump(ItalianU, handle, protocol=pickle.HIGHEST_PROTOCOL)

with open('EnglishB.pickle', 'rb') as handle:
  EnglishB = pickle.load(handle)
with open('EnglishU.pickle', 'rb') as handle:
  EnglishU = pickle.load(handle)  
with open('FrenchB.pickle', 'rb') as handle:
  FrenchB = pickle.load(handle)  
with open('FrenchU.pickle', 'rb') as handle:
  FrenchU= pickle.load(handle)
with open('ItalianB.pickle', 'rb') as handle:
  ItalianB= pickle.load(handle)
with open('ItalianU.pickle', 'rb') as handle:
  ItalianU= pickle.load(handle)
v = len(ItalianU) + len(EnglishU) + len(FrenchU)
f = open("/content/sample_data/LangId.test",'r',encoding="utf-8")#open and read file
z = open("/content/sample_data/myfile.txt", "w")
for line in f:
  unigrams_test = word_tokenize(line)
  bigrams_test = list(ngrams(unigrams_test, 2))   
  p_laplaceEnglish = 1
  p_laplaceFrench =1
  p_laplaceItalian =1
  for bigram in bigrams_test:
    nEnglish = EnglishB[bigram] if bigram in EnglishB.keys() else 0
    dEnglish = EnglishU[bigram[0]] if bigram[0] in EnglishU.keys() else 0
    p_laplaceEnglish = p_laplaceEnglish * ((nEnglish + 1) / (dEnglish + v))

    nFrench = FrenchB[bigram] if bigram in FrenchB.keys() else 0
    dFrench = FrenchU[bigram[0]] if bigram[0] in FrenchU.keys() else 0
    p_laplaceFrench = p_laplaceFrench * ((nFrench + 1) / (dFrench + v))

    nItalian = ItalianB[bigram] if bigram in ItalianB.keys() else 0
    dItalian = ItalianU[bigram[0]] if bigram[0] in ItalianU.keys() else 0
    p_laplaceItalian = p_laplaceItalian* ((nItalian + 1) / (dItalian + v))
  maxs = min(p_laplaceEnglish,p_laplaceFrench,p_laplaceItalian)
  if maxs == p_laplaceItalian:
    z = open("/content/sample_data/myfile.txt", "a")
    z.write("Italian\n")
    z.close()
  elif maxs == p_laplaceEnglish:
    z = open("/content/sample_data/myfile.txt", "a")
    z.write("English\n")
    z.close()
  else:
    z = open("/content/sample_data/myfile.txt", "a")
    z.write("French\n")
    z.close()
f.close()

f = open("/content/sample_data/LangId.sol",'r',encoding="utf-8")#open and read file
sols = []
for line in f:
  x = (line.rstrip("\n"))
  x = x.split()
  sols.append(x[1])
f.close()
f = open("/content/sample_data/myfile.txt",'r',encoding="utf-8")#open and read file
ans = []
for line in f:
  line = (line.rstrip("\n"))
  ans.append(line)
count = 0
total = len(ans)
for x in range(len(sols)):
  if sols[x] == ans[x]:
    count+=1
  else:
    print("Mismatch at line: " + str(x+1))
accuracy = count/total
print("Accuracy is : " + str(accuracy))



